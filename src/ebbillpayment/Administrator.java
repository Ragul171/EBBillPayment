/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ebbillpayment;

import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ragul
 */
public class Administrator extends javax.swing.JFrame {

    /**
     * Creates new form Sample
     */
    public Administrator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel8 = new javax.swing.JLabel();
        addConsumers = new javax.swing.JTabbedPane();
        consumer = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        consumerName = new javax.swing.JTextField();
        consumerServiceNum = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        consumerAddress = new javax.swing.JTextArea();
        addBtn = new javax.swing.JButton();
        connectionType = new javax.swing.JTextField();
        adderrmessage = new javax.swing.JLabel();
        consumptionDetails = new javax.swing.JPanel();
        serviceNumLbl = new javax.swing.JLabel();
        yearLbl = new javax.swing.JLabel();
        monthLbl = new javax.swing.JLabel();
        readingLbl = new javax.swing.JLabel();
        billAmountLbl = new javax.swing.JLabel();
        serviceNumber = new javax.swing.JTextField();
        year = new javax.swing.JTextField();
        month = new javax.swing.JComboBox<>();
        reading = new javax.swing.JTextField();
        billamount = new javax.swing.JTextField();
        AddReading = new javax.swing.JButton();
        conserrmessage = new javax.swing.JLabel();
        viewConsumers = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        serviceNum = new javax.swing.JTextField();
        Search = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        consumptionDet = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        personalDet = new javax.swing.JTable();
        viewerrmessage = new javax.swing.JLabel();
        logout = new javax.swing.JButton();

        jLabel8.setText("jLabel8");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        addConsumers.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N

        consumer.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        consumer.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                consumerComponentShown(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Name:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Service Number:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Address:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Connection Type:");

        consumerName.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        consumerServiceNum.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        consumerAddress.setColumns(20);
        consumerAddress.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        consumerAddress.setRows(5);
        jScrollPane1.setViewportView(consumerAddress);

        addBtn.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        connectionType.setEditable(false);
        connectionType.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        connectionType.setText("Domestic");

        adderrmessage.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        adderrmessage.setForeground(new java.awt.Color(255, 0, 51));

        javax.swing.GroupLayout consumerLayout = new javax.swing.GroupLayout(consumer);
        consumer.setLayout(consumerLayout);
        consumerLayout.setHorizontalGroup(
            consumerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consumerLayout.createSequentialGroup()
                .addGroup(consumerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(consumerLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(consumerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(40, 40, 40)
                        .addGroup(consumerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addComponent(consumerServiceNum)
                            .addComponent(consumerName)
                            .addComponent(connectionType)))
                    .addGroup(consumerLayout.createSequentialGroup()
                        .addGap(234, 234, 234)
                        .addComponent(addBtn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, consumerLayout.createSequentialGroup()
                .addGap(0, 113, Short.MAX_VALUE)
                .addComponent(adderrmessage, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(105, 105, 105))
        );
        consumerLayout.setVerticalGroup(
            consumerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consumerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adderrmessage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(consumerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(consumerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(consumerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(consumerServiceNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(consumerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(consumerLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(consumerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(connectionType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(addBtn)
                .addGap(20, 20, 20))
        );

        addConsumers.addTab("Add Consumers", consumer);

        consumptionDetails.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                consumptionDetailsComponentShown(evt);
            }
        });

        serviceNumLbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        serviceNumLbl.setText("Service Number:");

        yearLbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        yearLbl.setText("Year:");

        monthLbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        monthLbl.setText("Month:");

        readingLbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        readingLbl.setText("Reading:");

        billAmountLbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        billAmountLbl.setText("Bill Amount:");

        serviceNumber.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        year.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        month.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        month.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        reading.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        reading.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                readingFocusLost(evt);
            }
        });

        billamount.setEditable(false);
        billamount.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        AddReading.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        AddReading.setText("Add");
        AddReading.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddReadingActionPerformed(evt);
            }
        });

        conserrmessage.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        conserrmessage.setForeground(new java.awt.Color(255, 0, 51));

        javax.swing.GroupLayout consumptionDetailsLayout = new javax.swing.GroupLayout(consumptionDetails);
        consumptionDetails.setLayout(consumptionDetailsLayout);
        consumptionDetailsLayout.setHorizontalGroup(
            consumptionDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consumptionDetailsLayout.createSequentialGroup()
                .addGroup(consumptionDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(consumptionDetailsLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(consumptionDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(serviceNumLbl)
                            .addComponent(yearLbl)
                            .addComponent(monthLbl)
                            .addComponent(readingLbl)
                            .addComponent(billAmountLbl))
                        .addGap(18, 18, 18)
                        .addGroup(consumptionDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(serviceNumber)
                            .addComponent(year)
                            .addComponent(month, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(reading)
                            .addComponent(billamount, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(consumptionDetailsLayout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addComponent(AddReading))
                    .addGroup(consumptionDetailsLayout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(conserrmessage, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(89, Short.MAX_VALUE))
        );
        consumptionDetailsLayout.setVerticalGroup(
            consumptionDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consumptionDetailsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(conserrmessage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(consumptionDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(serviceNumLbl)
                    .addComponent(serviceNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(consumptionDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yearLbl)
                    .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(consumptionDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(monthLbl)
                    .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(consumptionDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(readingLbl)
                    .addComponent(reading, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(consumptionDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(billAmountLbl)
                    .addComponent(billamount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(AddReading)
                .addGap(28, 28, 28))
        );

        addConsumers.addTab("Add Consumption Details", consumptionDetails);

        viewConsumers.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                viewConsumersComponentShown(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Service Number:");

        serviceNum.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        Search.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Search.setText("Search");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        consumptionDet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Year", "Month", "Reading", "Bill Amount", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(consumptionDet);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Personal Detials :");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Consumption Details :");

        personalDet.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        personalDet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Consumer Name", "Service Number", "Consumer Address", "Connection Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(personalDet);

        viewerrmessage.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        viewerrmessage.setForeground(new java.awt.Color(255, 0, 51));

        javax.swing.GroupLayout viewConsumersLayout = new javax.swing.GroupLayout(viewConsumers);
        viewConsumers.setLayout(viewConsumersLayout);
        viewConsumersLayout.setHorizontalGroup(
            viewConsumersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewConsumersLayout.createSequentialGroup()
                .addGap(0, 48, Short.MAX_VALUE)
                .addGroup(viewConsumersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45))
            .addGroup(viewConsumersLayout.createSequentialGroup()
                .addGroup(viewConsumersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(viewConsumersLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(serviceNum, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(Search))
                    .addGroup(viewConsumersLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(viewConsumersLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7))
                    .addGroup(viewConsumersLayout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(viewerrmessage, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        viewConsumersLayout.setVerticalGroup(
            viewConsumersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewConsumersLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(viewerrmessage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(viewConsumersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(serviceNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Search))
                .addGap(13, 13, 13)
                .addComponent(jLabel2)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        addConsumers.addTab("Search Consumers", viewConsumers);

        logout.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        logout.setText("Logout");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addConsumers)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logout)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(addConsumers, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logout)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void readingFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_readingFocusLost
        // TODO add your handling code here:
        float charge;
        float amount;
        int unit = Integer.parseInt(reading.getText());
        if(unit >= 0 && unit <= 100){
            billamount.setText("0");
        }
        else if(unit >100 && unit <=200){
            unit-=100;
            amount = unit * 1.5f;
            billamount.setText(Float.toString(amount));
        }
        else if(unit >100 && unit <=500){
            unit-=100;
            amount = 100 * 2;
            unit-=100;
            amount+=unit*3;
            billamount.setText(Float.toString(amount));
        }
        else if(unit >100 && unit >500){
            unit-=100;
            amount = 100 * 3.5f;
            unit-=100;
            amount+=300*4.6f;
            unit-=300;
            amount+=unit* 6.6f;
            billamount.setText(Float.toString(amount));
        }
    }//GEN-LAST:event_readingFocusLost

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        if(consumerName.getText().toString().equals("")!=true && consumerServiceNum.getText().toString().equals("")!=true 
                && consumerAddress.getText().toString().equals("") !=true){
            adderrmessage.setText("");
            DatabaseConnection db = new DatabaseConnection();
            ResultSet rs = null;
            db.connectDb();
            String name=consumerName.getText();
            int serviceNo=Integer.parseInt(consumerServiceNum.getText());
            String address=consumerAddress.getText();
            String connType=connectionType.getText();
            String query="INSERT INTO consumerdetails (ConsumerName,ServiceNum,ConsumerAddress,ConnectionType) VALUES('"+name+"',"+serviceNo+",'"+address+"','"+connType+"')";
            try {
                Statement st = db.con.createStatement();
                int ins = st.executeUpdate(query);
                if(ins>0){
                    JOptionPane.showMessageDialog(null,"Consumer Added");
                }
                else{
                    JOptionPane.showMessageDialog(null,"Consumer Not Added");
                }

            } catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
            consumerName.setText("");
            consumerServiceNum.setText("");
            consumerAddress.setText("");
            
        }
        else{
            adderrmessage.setText("*All fields are required. Please enter all the fields");
            adderrmessage.setForeground(Color.red);
        }
        
    }//GEN-LAST:event_addBtnActionPerformed

    private void AddReadingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddReadingActionPerformed
        // TODO add your handling code here:
        if(serviceNumber.getText().toString().equals("")!=true && year.getText().toString().equals("")!=true && 
                reading.getText().toString().equals("")!=true && billamount.getText().toString().equals("")!=true){
                int serviceno = Integer.parseInt(serviceNumber.getText());
                int currentyear = Integer.parseInt(year.getText());
                int unit = Integer.parseInt(reading.getText());
                String currentmonth = month.getSelectedItem().toString();
                float amount = Float.parseFloat(billamount.getText());

                DatabaseConnection db = new DatabaseConnection();
                db.connectDb();
                String query = "insert into consumptiondetails values("+serviceno+","+currentyear+",'"+currentmonth+"',"+unit+","+amount+",'Not Paid')";
                try {
                    Statement st = db.con.createStatement();
                    int ins = st.executeUpdate(query);
                    if(ins>0){
                        JOptionPane.showMessageDialog(null,"Reading Added");
                    }
                    else{
                        JOptionPane.showMessageDialog(null,"Reading Not Added");
                    }

                } catch (SQLException ex) {
                    Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                }
                serviceNumber.setText("");
                year.setText("");
                reading.setText("");
                billamount.setText("");
        }
        else{
            conserrmessage.setText("*All fields are required. Please enter all the fields");
            conserrmessage.setForeground(Color.red);
        }
        
    }//GEN-LAST:event_AddReadingActionPerformed

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        // TODO add your handling code here:
//        personalDet.removeAll();
//        consumptionDet.removeAll();
        if(serviceNum.getText().toString().equals("")!=true){
            viewerrmessage.setText("");
            DefaultTableModel tblModel=(DefaultTableModel)personalDet.getModel();
            tblModel.setRowCount(0);
            DefaultTableModel tblModel1=(DefaultTableModel)consumptionDet.getModel();
            tblModel1.setRowCount(0);
            int serviceNo=Integer.parseInt(serviceNum.getText());
            String query="SELECT * FROM consumerdetails WHERE ServiceNum="+serviceNo;
            String query1="SELECT * FROM consumptiondetails WHERE ServiceNum="+serviceNo;
            String query2="SELECT COUNT(*) FROM consumptiondetails WHERE ServiceNum="+serviceNo;
            DatabaseConnection db = new DatabaseConnection();
            ResultSet rs,rs1=null;
            db.connectDb();
            try {
                PreparedStatement pst = db.con.prepareStatement(query);
                rs = pst.executeQuery();
                ResultSet rs2=rs;
                String [][]tbdata=new String[1][4];
                if(rs.isBeforeFirst()){
                    if(rs.next()){
                            String consName=rs.getString("ConsumerName");
                            String serviceNum=String.valueOf(rs.getString("ServiceNum"));
                            String consAdd=rs.getString("ConsumerAddress");
                            String conType=rs.getString("ConnectionType");
                            tbdata[0][0]=consName;
                            tbdata[0][1]=serviceNum;
                            tbdata[0][2]=consAdd;
                            tbdata[0][3]=conType;
                        }
                        tblModel=(DefaultTableModel)personalDet.getModel();
                        String []cols={"Consumer Name","Service Number","Consumer Address","Connection Type"};
                        tblModel.setDataVector(tbdata, cols);
                        PreparedStatement pst1 = db.con.prepareStatement(query1);
                        PreparedStatement pst2 = db.con.prepareStatement(query2);
                        rs1 = pst2.executeQuery();
                        rs1.next();
                        int size = rs1.getInt(1);
                        rs1.close();
                        rs = pst1.executeQuery();
                        String [][]tbConsData=new String[size][5];
                        int i=0;
                        while(rs.next()){
                            String consName=rs.getString("Year");
                            String serviceNum=String.valueOf(rs.getString("Month"));
                            String consAdd=rs.getString("Reading");
                            String conType=rs.getString("BillAmount");
                            String status=rs.getString("Status");
                            tbConsData[i][0]=consName;
                            tbConsData[i][1]=serviceNum;
                            tbConsData[i][2]=consAdd;
                            tbConsData[i][3]=conType;
                            tbConsData[i][4]=status;
                            i+=1;
                        }
                        tblModel1=(DefaultTableModel)consumptionDet.getModel();
                        String []cols1={"Year","Month","Reading","Bill amount","Status"};
                        tblModel1.setDataVector(tbConsData, cols1);
                }
                else{
                    viewerrmessage.setText("* Not a valid service number");
                }
            }
            catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            viewerrmessage.setText("*Please enter service number");
        }
        
    }//GEN-LAST:event_SearchActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
        dispose();
        new Login().setVisible(true);
    }//GEN-LAST:event_logoutActionPerformed

    private void consumptionDetailsComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_consumptionDetailsComponentShown
        // TODO add your handling code here:
        serviceNum.setText("");
                year.setText("");
                reading.setText("");
                billamount.setText("");
    }//GEN-LAST:event_consumptionDetailsComponentShown

    private void consumerComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_consumerComponentShown
        // TODO add your handling code here:
        consumerName.setText("");
        consumerServiceNum.setText("");
        consumerAddress.setText("");
    }//GEN-LAST:event_consumerComponentShown

    private void viewConsumersComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_viewConsumersComponentShown
        // TODO add your handling code here:
        serviceNum.setText("");
        DefaultTableModel model=(DefaultTableModel)personalDet.getModel();
        model.setRowCount(0);
        DefaultTableModel model1=(DefaultTableModel)consumptionDet.getModel();
        model1.setRowCount(0);
    }//GEN-LAST:event_viewConsumersComponentShown

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Administrator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Administrator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Administrator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Administrator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Administrator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddReading;
    private javax.swing.JButton Search;
    private javax.swing.JButton addBtn;
    private javax.swing.JTabbedPane addConsumers;
    private javax.swing.JLabel adderrmessage;
    private javax.swing.JLabel billAmountLbl;
    private javax.swing.JTextField billamount;
    private javax.swing.JTextField connectionType;
    private javax.swing.JLabel conserrmessage;
    private javax.swing.JPanel consumer;
    private javax.swing.JTextArea consumerAddress;
    private javax.swing.JTextField consumerName;
    private javax.swing.JTextField consumerServiceNum;
    private javax.swing.JTable consumptionDet;
    private javax.swing.JPanel consumptionDetails;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton logout;
    private javax.swing.JComboBox<String> month;
    private javax.swing.JLabel monthLbl;
    private javax.swing.JTable personalDet;
    private javax.swing.JTextField reading;
    private javax.swing.JLabel readingLbl;
    private javax.swing.JTextField serviceNum;
    private javax.swing.JLabel serviceNumLbl;
    private javax.swing.JTextField serviceNumber;
    private javax.swing.JPanel viewConsumers;
    private javax.swing.JLabel viewerrmessage;
    private javax.swing.JTextField year;
    private javax.swing.JLabel yearLbl;
    // End of variables declaration//GEN-END:variables

   
}
